/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.TFGInformatica;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ContaminacionEstacionDeMedicion extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1786433626916135949L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ContaminacionEstacionDeMedicion\",\"namespace\":\"org.TFGInformatica\",\"fields\":[{\"name\":\"idelem\",\"type\":\"int\"},{\"name\":\"descripcion\",\"type\":\"int\"},{\"name\":\"so2\",\"type\":\"float\"},{\"name\":\"co\",\"type\":\"float\"},{\"name\":\"no\",\"type\":\"float\"},{\"name\":\"no2\",\"type\":\"float\"},{\"name\":\"pm25\",\"type\":\"float\"},{\"name\":\"pm10\",\"type\":\"float\"},{\"name\":\"nox\",\"type\":\"float\"},{\"name\":\"o3\",\"type\":\"float\"},{\"name\":\"tol\",\"type\":\"float\"},{\"name\":\"ben\",\"type\":\"float\"},{\"name\":\"ebe\",\"type\":\"float\"},{\"name\":\"fechaActualizacion\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ContaminacionEstacionDeMedicion> ENCODER =
      new BinaryMessageEncoder<ContaminacionEstacionDeMedicion>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ContaminacionEstacionDeMedicion> DECODER =
      new BinaryMessageDecoder<ContaminacionEstacionDeMedicion>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ContaminacionEstacionDeMedicion> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ContaminacionEstacionDeMedicion> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ContaminacionEstacionDeMedicion> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ContaminacionEstacionDeMedicion>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ContaminacionEstacionDeMedicion to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ContaminacionEstacionDeMedicion from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ContaminacionEstacionDeMedicion instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ContaminacionEstacionDeMedicion fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private int idelem;
   private int descripcion;
   private float so2;
   private float co;
   private float no;
   private float no2;
   private float pm25;
   private float pm10;
   private float nox;
   private float o3;
   private float tol;
   private float ben;
   private float ebe;
   private java.lang.CharSequence fechaActualizacion;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ContaminacionEstacionDeMedicion() {}

  /**
   * All-args constructor.
   * @param idelem The new value for idelem
   * @param descripcion The new value for descripcion
   * @param so2 The new value for so2
   * @param co The new value for co
   * @param no The new value for no
   * @param no2 The new value for no2
   * @param pm25 The new value for pm25
   * @param pm10 The new value for pm10
   * @param nox The new value for nox
   * @param o3 The new value for o3
   * @param tol The new value for tol
   * @param ben The new value for ben
   * @param ebe The new value for ebe
   * @param fechaActualizacion The new value for fechaActualizacion
   */
  public ContaminacionEstacionDeMedicion(java.lang.Integer idelem, java.lang.Integer descripcion, java.lang.Float so2, java.lang.Float co, java.lang.Float no, java.lang.Float no2, java.lang.Float pm25, java.lang.Float pm10, java.lang.Float nox, java.lang.Float o3, java.lang.Float tol, java.lang.Float ben, java.lang.Float ebe, java.lang.CharSequence fechaActualizacion) {
    this.idelem = idelem;
    this.descripcion = descripcion;
    this.so2 = so2;
    this.co = co;
    this.no = no;
    this.no2 = no2;
    this.pm25 = pm25;
    this.pm10 = pm10;
    this.nox = nox;
    this.o3 = o3;
    this.tol = tol;
    this.ben = ben;
    this.ebe = ebe;
    this.fechaActualizacion = fechaActualizacion;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return idelem;
    case 1: return descripcion;
    case 2: return so2;
    case 3: return co;
    case 4: return no;
    case 5: return no2;
    case 6: return pm25;
    case 7: return pm10;
    case 8: return nox;
    case 9: return o3;
    case 10: return tol;
    case 11: return ben;
    case 12: return ebe;
    case 13: return fechaActualizacion;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: idelem = (java.lang.Integer)value$; break;
    case 1: descripcion = (java.lang.Integer)value$; break;
    case 2: so2 = (java.lang.Float)value$; break;
    case 3: co = (java.lang.Float)value$; break;
    case 4: no = (java.lang.Float)value$; break;
    case 5: no2 = (java.lang.Float)value$; break;
    case 6: pm25 = (java.lang.Float)value$; break;
    case 7: pm10 = (java.lang.Float)value$; break;
    case 8: nox = (java.lang.Float)value$; break;
    case 9: o3 = (java.lang.Float)value$; break;
    case 10: tol = (java.lang.Float)value$; break;
    case 11: ben = (java.lang.Float)value$; break;
    case 12: ebe = (java.lang.Float)value$; break;
    case 13: fechaActualizacion = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'idelem' field.
   * @return The value of the 'idelem' field.
   */
  public int getIdelem() {
    return idelem;
  }


  /**
   * Sets the value of the 'idelem' field.
   * @param value the value to set.
   */
  public void setIdelem(int value) {
    this.idelem = value;
  }

  /**
   * Gets the value of the 'descripcion' field.
   * @return The value of the 'descripcion' field.
   */
  public int getDescripcion() {
    return descripcion;
  }


  /**
   * Sets the value of the 'descripcion' field.
   * @param value the value to set.
   */
  public void setDescripcion(int value) {
    this.descripcion = value;
  }

  /**
   * Gets the value of the 'so2' field.
   * @return The value of the 'so2' field.
   */
  public float getSo2() {
    return so2;
  }


  /**
   * Sets the value of the 'so2' field.
   * @param value the value to set.
   */
  public void setSo2(float value) {
    this.so2 = value;
  }

  /**
   * Gets the value of the 'co' field.
   * @return The value of the 'co' field.
   */
  public float getCo() {
    return co;
  }


  /**
   * Sets the value of the 'co' field.
   * @param value the value to set.
   */
  public void setCo(float value) {
    this.co = value;
  }

  /**
   * Gets the value of the 'no' field.
   * @return The value of the 'no' field.
   */
  public float getNo() {
    return no;
  }


  /**
   * Sets the value of the 'no' field.
   * @param value the value to set.
   */
  public void setNo(float value) {
    this.no = value;
  }

  /**
   * Gets the value of the 'no2' field.
   * @return The value of the 'no2' field.
   */
  public float getNo2() {
    return no2;
  }


  /**
   * Sets the value of the 'no2' field.
   * @param value the value to set.
   */
  public void setNo2(float value) {
    this.no2 = value;
  }

  /**
   * Gets the value of the 'pm25' field.
   * @return The value of the 'pm25' field.
   */
  public float getPm25() {
    return pm25;
  }


  /**
   * Sets the value of the 'pm25' field.
   * @param value the value to set.
   */
  public void setPm25(float value) {
    this.pm25 = value;
  }

  /**
   * Gets the value of the 'pm10' field.
   * @return The value of the 'pm10' field.
   */
  public float getPm10() {
    return pm10;
  }


  /**
   * Sets the value of the 'pm10' field.
   * @param value the value to set.
   */
  public void setPm10(float value) {
    this.pm10 = value;
  }

  /**
   * Gets the value of the 'nox' field.
   * @return The value of the 'nox' field.
   */
  public float getNox() {
    return nox;
  }


  /**
   * Sets the value of the 'nox' field.
   * @param value the value to set.
   */
  public void setNox(float value) {
    this.nox = value;
  }

  /**
   * Gets the value of the 'o3' field.
   * @return The value of the 'o3' field.
   */
  public float getO3() {
    return o3;
  }


  /**
   * Sets the value of the 'o3' field.
   * @param value the value to set.
   */
  public void setO3(float value) {
    this.o3 = value;
  }

  /**
   * Gets the value of the 'tol' field.
   * @return The value of the 'tol' field.
   */
  public float getTol() {
    return tol;
  }


  /**
   * Sets the value of the 'tol' field.
   * @param value the value to set.
   */
  public void setTol(float value) {
    this.tol = value;
  }

  /**
   * Gets the value of the 'ben' field.
   * @return The value of the 'ben' field.
   */
  public float getBen() {
    return ben;
  }


  /**
   * Sets the value of the 'ben' field.
   * @param value the value to set.
   */
  public void setBen(float value) {
    this.ben = value;
  }

  /**
   * Gets the value of the 'ebe' field.
   * @return The value of the 'ebe' field.
   */
  public float getEbe() {
    return ebe;
  }


  /**
   * Sets the value of the 'ebe' field.
   * @param value the value to set.
   */
  public void setEbe(float value) {
    this.ebe = value;
  }

  /**
   * Gets the value of the 'fechaActualizacion' field.
   * @return The value of the 'fechaActualizacion' field.
   */
  public java.lang.CharSequence getFechaActualizacion() {
    return fechaActualizacion;
  }


  /**
   * Sets the value of the 'fechaActualizacion' field.
   * @param value the value to set.
   */
  public void setFechaActualizacion(java.lang.CharSequence value) {
    this.fechaActualizacion = value;
  }

  /**
   * Creates a new ContaminacionEstacionDeMedicion RecordBuilder.
   * @return A new ContaminacionEstacionDeMedicion RecordBuilder
   */
  public static org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder newBuilder() {
    return new org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder();
  }

  /**
   * Creates a new ContaminacionEstacionDeMedicion RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ContaminacionEstacionDeMedicion RecordBuilder
   */
  public static org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder newBuilder(org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder other) {
    if (other == null) {
      return new org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder();
    } else {
      return new org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder(other);
    }
  }

  /**
   * Creates a new ContaminacionEstacionDeMedicion RecordBuilder by copying an existing ContaminacionEstacionDeMedicion instance.
   * @param other The existing instance to copy.
   * @return A new ContaminacionEstacionDeMedicion RecordBuilder
   */
  public static org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder newBuilder(org.TFGInformatica.ContaminacionEstacionDeMedicion other) {
    if (other == null) {
      return new org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder();
    } else {
      return new org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder(other);
    }
  }

  /**
   * RecordBuilder for ContaminacionEstacionDeMedicion instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ContaminacionEstacionDeMedicion>
    implements org.apache.avro.data.RecordBuilder<ContaminacionEstacionDeMedicion> {

    private int idelem;
    private int descripcion;
    private float so2;
    private float co;
    private float no;
    private float no2;
    private float pm25;
    private float pm10;
    private float nox;
    private float o3;
    private float tol;
    private float ben;
    private float ebe;
    private java.lang.CharSequence fechaActualizacion;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.idelem)) {
        this.idelem = data().deepCopy(fields()[0].schema(), other.idelem);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.descripcion)) {
        this.descripcion = data().deepCopy(fields()[1].schema(), other.descripcion);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.so2)) {
        this.so2 = data().deepCopy(fields()[2].schema(), other.so2);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.co)) {
        this.co = data().deepCopy(fields()[3].schema(), other.co);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.no)) {
        this.no = data().deepCopy(fields()[4].schema(), other.no);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.no2)) {
        this.no2 = data().deepCopy(fields()[5].schema(), other.no2);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.pm25)) {
        this.pm25 = data().deepCopy(fields()[6].schema(), other.pm25);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.pm10)) {
        this.pm10 = data().deepCopy(fields()[7].schema(), other.pm10);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.nox)) {
        this.nox = data().deepCopy(fields()[8].schema(), other.nox);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.o3)) {
        this.o3 = data().deepCopy(fields()[9].schema(), other.o3);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.tol)) {
        this.tol = data().deepCopy(fields()[10].schema(), other.tol);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.ben)) {
        this.ben = data().deepCopy(fields()[11].schema(), other.ben);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.ebe)) {
        this.ebe = data().deepCopy(fields()[12].schema(), other.ebe);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.fechaActualizacion)) {
        this.fechaActualizacion = data().deepCopy(fields()[13].schema(), other.fechaActualizacion);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
    }

    /**
     * Creates a Builder by copying an existing ContaminacionEstacionDeMedicion instance
     * @param other The existing instance to copy.
     */
    private Builder(org.TFGInformatica.ContaminacionEstacionDeMedicion other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.idelem)) {
        this.idelem = data().deepCopy(fields()[0].schema(), other.idelem);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.descripcion)) {
        this.descripcion = data().deepCopy(fields()[1].schema(), other.descripcion);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.so2)) {
        this.so2 = data().deepCopy(fields()[2].schema(), other.so2);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.co)) {
        this.co = data().deepCopy(fields()[3].schema(), other.co);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.no)) {
        this.no = data().deepCopy(fields()[4].schema(), other.no);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.no2)) {
        this.no2 = data().deepCopy(fields()[5].schema(), other.no2);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.pm25)) {
        this.pm25 = data().deepCopy(fields()[6].schema(), other.pm25);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.pm10)) {
        this.pm10 = data().deepCopy(fields()[7].schema(), other.pm10);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.nox)) {
        this.nox = data().deepCopy(fields()[8].schema(), other.nox);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.o3)) {
        this.o3 = data().deepCopy(fields()[9].schema(), other.o3);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.tol)) {
        this.tol = data().deepCopy(fields()[10].schema(), other.tol);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.ben)) {
        this.ben = data().deepCopy(fields()[11].schema(), other.ben);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.ebe)) {
        this.ebe = data().deepCopy(fields()[12].schema(), other.ebe);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.fechaActualizacion)) {
        this.fechaActualizacion = data().deepCopy(fields()[13].schema(), other.fechaActualizacion);
        fieldSetFlags()[13] = true;
      }
    }

    /**
      * Gets the value of the 'idelem' field.
      * @return The value.
      */
    public int getIdelem() {
      return idelem;
    }


    /**
      * Sets the value of the 'idelem' field.
      * @param value The value of 'idelem'.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder setIdelem(int value) {
      validate(fields()[0], value);
      this.idelem = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'idelem' field has been set.
      * @return True if the 'idelem' field has been set, false otherwise.
      */
    public boolean hasIdelem() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'idelem' field.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder clearIdelem() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'descripcion' field.
      * @return The value.
      */
    public int getDescripcion() {
      return descripcion;
    }


    /**
      * Sets the value of the 'descripcion' field.
      * @param value The value of 'descripcion'.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder setDescripcion(int value) {
      validate(fields()[1], value);
      this.descripcion = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'descripcion' field has been set.
      * @return True if the 'descripcion' field has been set, false otherwise.
      */
    public boolean hasDescripcion() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'descripcion' field.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder clearDescripcion() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'so2' field.
      * @return The value.
      */
    public float getSo2() {
      return so2;
    }


    /**
      * Sets the value of the 'so2' field.
      * @param value The value of 'so2'.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder setSo2(float value) {
      validate(fields()[2], value);
      this.so2 = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'so2' field has been set.
      * @return True if the 'so2' field has been set, false otherwise.
      */
    public boolean hasSo2() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'so2' field.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder clearSo2() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'co' field.
      * @return The value.
      */
    public float getCo() {
      return co;
    }


    /**
      * Sets the value of the 'co' field.
      * @param value The value of 'co'.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder setCo(float value) {
      validate(fields()[3], value);
      this.co = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'co' field has been set.
      * @return True if the 'co' field has been set, false otherwise.
      */
    public boolean hasCo() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'co' field.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder clearCo() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'no' field.
      * @return The value.
      */
    public float getNo() {
      return no;
    }


    /**
      * Sets the value of the 'no' field.
      * @param value The value of 'no'.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder setNo(float value) {
      validate(fields()[4], value);
      this.no = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'no' field has been set.
      * @return True if the 'no' field has been set, false otherwise.
      */
    public boolean hasNo() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'no' field.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder clearNo() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'no2' field.
      * @return The value.
      */
    public float getNo2() {
      return no2;
    }


    /**
      * Sets the value of the 'no2' field.
      * @param value The value of 'no2'.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder setNo2(float value) {
      validate(fields()[5], value);
      this.no2 = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'no2' field has been set.
      * @return True if the 'no2' field has been set, false otherwise.
      */
    public boolean hasNo2() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'no2' field.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder clearNo2() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'pm25' field.
      * @return The value.
      */
    public float getPm25() {
      return pm25;
    }


    /**
      * Sets the value of the 'pm25' field.
      * @param value The value of 'pm25'.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder setPm25(float value) {
      validate(fields()[6], value);
      this.pm25 = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'pm25' field has been set.
      * @return True if the 'pm25' field has been set, false otherwise.
      */
    public boolean hasPm25() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'pm25' field.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder clearPm25() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'pm10' field.
      * @return The value.
      */
    public float getPm10() {
      return pm10;
    }


    /**
      * Sets the value of the 'pm10' field.
      * @param value The value of 'pm10'.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder setPm10(float value) {
      validate(fields()[7], value);
      this.pm10 = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'pm10' field has been set.
      * @return True if the 'pm10' field has been set, false otherwise.
      */
    public boolean hasPm10() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'pm10' field.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder clearPm10() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'nox' field.
      * @return The value.
      */
    public float getNox() {
      return nox;
    }


    /**
      * Sets the value of the 'nox' field.
      * @param value The value of 'nox'.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder setNox(float value) {
      validate(fields()[8], value);
      this.nox = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'nox' field has been set.
      * @return True if the 'nox' field has been set, false otherwise.
      */
    public boolean hasNox() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'nox' field.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder clearNox() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'o3' field.
      * @return The value.
      */
    public float getO3() {
      return o3;
    }


    /**
      * Sets the value of the 'o3' field.
      * @param value The value of 'o3'.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder setO3(float value) {
      validate(fields()[9], value);
      this.o3 = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'o3' field has been set.
      * @return True if the 'o3' field has been set, false otherwise.
      */
    public boolean hasO3() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'o3' field.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder clearO3() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'tol' field.
      * @return The value.
      */
    public float getTol() {
      return tol;
    }


    /**
      * Sets the value of the 'tol' field.
      * @param value The value of 'tol'.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder setTol(float value) {
      validate(fields()[10], value);
      this.tol = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'tol' field has been set.
      * @return True if the 'tol' field has been set, false otherwise.
      */
    public boolean hasTol() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'tol' field.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder clearTol() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'ben' field.
      * @return The value.
      */
    public float getBen() {
      return ben;
    }


    /**
      * Sets the value of the 'ben' field.
      * @param value The value of 'ben'.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder setBen(float value) {
      validate(fields()[11], value);
      this.ben = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'ben' field has been set.
      * @return True if the 'ben' field has been set, false otherwise.
      */
    public boolean hasBen() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'ben' field.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder clearBen() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'ebe' field.
      * @return The value.
      */
    public float getEbe() {
      return ebe;
    }


    /**
      * Sets the value of the 'ebe' field.
      * @param value The value of 'ebe'.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder setEbe(float value) {
      validate(fields()[12], value);
      this.ebe = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'ebe' field has been set.
      * @return True if the 'ebe' field has been set, false otherwise.
      */
    public boolean hasEbe() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'ebe' field.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder clearEbe() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'fechaActualizacion' field.
      * @return The value.
      */
    public java.lang.CharSequence getFechaActualizacion() {
      return fechaActualizacion;
    }


    /**
      * Sets the value of the 'fechaActualizacion' field.
      * @param value The value of 'fechaActualizacion'.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder setFechaActualizacion(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.fechaActualizacion = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'fechaActualizacion' field has been set.
      * @return True if the 'fechaActualizacion' field has been set, false otherwise.
      */
    public boolean hasFechaActualizacion() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'fechaActualizacion' field.
      * @return This builder.
      */
    public org.TFGInformatica.ContaminacionEstacionDeMedicion.Builder clearFechaActualizacion() {
      fechaActualizacion = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ContaminacionEstacionDeMedicion build() {
      try {
        ContaminacionEstacionDeMedicion record = new ContaminacionEstacionDeMedicion();
        record.idelem = fieldSetFlags()[0] ? this.idelem : (java.lang.Integer) defaultValue(fields()[0]);
        record.descripcion = fieldSetFlags()[1] ? this.descripcion : (java.lang.Integer) defaultValue(fields()[1]);
        record.so2 = fieldSetFlags()[2] ? this.so2 : (java.lang.Float) defaultValue(fields()[2]);
        record.co = fieldSetFlags()[3] ? this.co : (java.lang.Float) defaultValue(fields()[3]);
        record.no = fieldSetFlags()[4] ? this.no : (java.lang.Float) defaultValue(fields()[4]);
        record.no2 = fieldSetFlags()[5] ? this.no2 : (java.lang.Float) defaultValue(fields()[5]);
        record.pm25 = fieldSetFlags()[6] ? this.pm25 : (java.lang.Float) defaultValue(fields()[6]);
        record.pm10 = fieldSetFlags()[7] ? this.pm10 : (java.lang.Float) defaultValue(fields()[7]);
        record.nox = fieldSetFlags()[8] ? this.nox : (java.lang.Float) defaultValue(fields()[8]);
        record.o3 = fieldSetFlags()[9] ? this.o3 : (java.lang.Float) defaultValue(fields()[9]);
        record.tol = fieldSetFlags()[10] ? this.tol : (java.lang.Float) defaultValue(fields()[10]);
        record.ben = fieldSetFlags()[11] ? this.ben : (java.lang.Float) defaultValue(fields()[11]);
        record.ebe = fieldSetFlags()[12] ? this.ebe : (java.lang.Float) defaultValue(fields()[12]);
        record.fechaActualizacion = fieldSetFlags()[13] ? this.fechaActualizacion : (java.lang.CharSequence) defaultValue(fields()[13]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ContaminacionEstacionDeMedicion>
    WRITER$ = (org.apache.avro.io.DatumWriter<ContaminacionEstacionDeMedicion>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ContaminacionEstacionDeMedicion>
    READER$ = (org.apache.avro.io.DatumReader<ContaminacionEstacionDeMedicion>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeInt(this.idelem);

    out.writeInt(this.descripcion);

    out.writeFloat(this.so2);

    out.writeFloat(this.co);

    out.writeFloat(this.no);

    out.writeFloat(this.no2);

    out.writeFloat(this.pm25);

    out.writeFloat(this.pm10);

    out.writeFloat(this.nox);

    out.writeFloat(this.o3);

    out.writeFloat(this.tol);

    out.writeFloat(this.ben);

    out.writeFloat(this.ebe);

    out.writeString(this.fechaActualizacion);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.idelem = in.readInt();

      this.descripcion = in.readInt();

      this.so2 = in.readFloat();

      this.co = in.readFloat();

      this.no = in.readFloat();

      this.no2 = in.readFloat();

      this.pm25 = in.readFloat();

      this.pm10 = in.readFloat();

      this.nox = in.readFloat();

      this.o3 = in.readFloat();

      this.tol = in.readFloat();

      this.ben = in.readFloat();

      this.ebe = in.readFloat();

      this.fechaActualizacion = in.readString(this.fechaActualizacion instanceof Utf8 ? (Utf8)this.fechaActualizacion : null);

    } else {
      for (int i = 0; i < 14; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.idelem = in.readInt();
          break;

        case 1:
          this.descripcion = in.readInt();
          break;

        case 2:
          this.so2 = in.readFloat();
          break;

        case 3:
          this.co = in.readFloat();
          break;

        case 4:
          this.no = in.readFloat();
          break;

        case 5:
          this.no2 = in.readFloat();
          break;

        case 6:
          this.pm25 = in.readFloat();
          break;

        case 7:
          this.pm10 = in.readFloat();
          break;

        case 8:
          this.nox = in.readFloat();
          break;

        case 9:
          this.o3 = in.readFloat();
          break;

        case 10:
          this.tol = in.readFloat();
          break;

        case 11:
          this.ben = in.readFloat();
          break;

        case 12:
          this.ebe = in.readFloat();
          break;

        case 13:
          this.fechaActualizacion = in.readString(this.fechaActualizacion instanceof Utf8 ? (Utf8)this.fechaActualizacion : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










